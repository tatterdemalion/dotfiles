set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

Plugin 'kien/ctrlp.vim.git'
Plugin 'hynek/vim-python-pep8-indent'
Plugin 'tpope/vim-sensible.git'
Plugin 'jmcantrell/vim-virtualenv.git'
Plugin 'scrooloose/nerdtree.git'
Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/syntastic.git'
Plugin 'bling/vim-bufferline'
Plugin 'davidhalter/jedi-vim.git'
Plugin 'rizzatti/funcoo.vim'
Plugin 'rizzatti/greper.vim'
Plugin 'tpope/vim-commentary.git'
Plugin 'bling/vim-airline'
Plugin 'tmhedberg/SimpylFold'
Plugin 'vim-scripts/taglist.vim'
Plugin 'flazz/vim-colorschemes.git'
Plugin 'elzr/vim-json.git'

" " All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" swp files
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//

set modelines=0
set t_Co=256

set background=dark
colorscheme Monokai
let g:currentscheme = 'Monokai'

function! GetScheme(Direction)
python << endpython
import vim
current = vim.eval("g:currentscheme")
direction = vim.eval("a:Direction")
schemes = [
		'Tomorrow', 'zenburn', 'molokai', 'lucius', 'solarized', 'Monokai',
		'flattr', 'flatland', 'flatcolor', 'flatui', 'mac_classic', 'neverland',
		'neverland-darker', 'newspaper', 'obsidian', 'PaperColor', 'perfect',
		'pencil']
use = schemes[0]
if current in schemes:
    index = schemes.index(current)
    if direction == 'next':
        index += 1
    elif direction == 'prev':
        index -= 1
    use = schemes[(index) % len(schemes)]
vim.command("colorscheme " + use)
vim.command("let g:currentscheme = '{}'".format(use))
endpython
endfunction

"TAB settings.
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

"" More Common Settings.
set encoding=utf-8
set scrolloff=3
set autoindent
set noshowmode
set showcmd
set hidden
set visualbell

set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2

set number
set relativenumber

set undofile
set shell=/bin/bash
set lazyredraw
set matchtime=3

"Settings for Searching and Moving
set ignorecase
set smartcase
set incsearch
set showmatch
set hlsearch

" Make Vim to handle long lines nicely.
set wrap
set textwidth=79
set formatoptions=qrn1
set colorcolumn=79

set completeopt-=preview

" To  show special characters in Vim
set listchars=tab:▸\ ,eol:¬

" enable folding
set foldmethod=indent
set foldlevel=99
set foldnestmax=2

" taglist
let Tlist_WinWidth = 79

" Set title to window
set title

" Make pasting done without any indentation break."
set pastetoggle=<F3>

" Make Vim able to edit crontab files again.
set backupskip=/tmp/*,/private/tmp/*"

" Wildmenu completion "
set wildmenu
set wildmode=list:longest
set wildignore+=.hg,.git,.svn " Version Controls"
set wildignore+=*.aux,*.out,*.toc "Latex Indermediate files"
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg "Binary Imgs"
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest "Compiled Object files"
set wildignore+=*.spl "Compiled speolling world list"
set wildignore+=*.sw? "Vim swap files"
set wildignore+=*.DS_Store "OSX SHIT"
set wildignore+=*.luac "Lua byte code"
"set wildignore+=migrations "Django migrations"
set wildignore+=*.pyc "Python Object codes"
set wildignore+=*.orig "Merge resolution files"
set wildignore+=*.beam
set wildignore+=build
set wildignore+=/static
set wildignore+=tmp
set wildignore+=node_modules
set wildignore+=*.class
set wildignore+=.stack-work

let NERDTreeIgnore = ['\.pyc$']

let mapleader = ","
nnoremap <leader><leader> <c-^>
nnoremap <S-Tab> <C-o>          " shift+tab instead of kntrl-o and tab to return
map <C-n> :NERDTreeToggle<CR>
map <C-x> :CtrlPBuffer<CR>      " open buffer list
map <C-z> :TlistToggle<CR>
nnoremap <leader><Space> :nohlsearch<cr>
nnoremap ' `                    " match single quote to backtick
nnoremap ` '                    " and match backtick to single quote

" easier navigation between split windows
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

nnoremap <Space> za             " folding
map <C-v> :call GetScheme('next')<CR>
map <C-v>v :call GetScheme('prev')<CR>

syntax enable
set encoding=utf-8
set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation

"" Whitespace
set number                      " show line numbers
set nowrap                      " don't wrap lines
set tabstop=2 shiftwidth=2      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

"" copy pasta
set clipboard+=unnamed  " use the clipboards of vim and win
set paste               " Paste from a windows or from vim
set go+=a               " Visual selection automatically copied to the clipboard

set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_max_files=0
let g:ctrlp_user_command = ['.git/', 'cd %s && git ls-files --exclude-standard -co']
